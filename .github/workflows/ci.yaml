name: Continuous Test

on:
  push:
    branches:
      - 'main'
  pull_request: {}

jobs:
  test_cpu:
    runs-on: ubuntu-latest
    environment: continuous_test
    container:
      image: docker.io/jcfaracco/dasf:cpu_ci
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry build
          # Uninstall any stanza of dasf
          pip uninstall dasf -y
          # Install requirements
          pip install -i https://test.pypi.org/simple/ XPySom-dask
          pip install dist/*.whl
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 dasf/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 dasf/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run test cases
        run: |
          pytest tests/
  test_gpu:
    runs-on: ubuntu-latest
    environment: continuous_test
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master
      - name: Install dependencies 👨💻
        run: npm i
      - name: Build for production 🏗️
        run: npm run build
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.CLUSTER_SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.CLUSTER_SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa.pub
          ssh-keyscan -H ${{ secrets.CLUSTER_ADDRESS }} >> ~/.ssh/known_hosts
      - name: Test SSH connection
        run: |
          ssh -T ${{ secrets.CLUSTER_USER }}@${{ secrets.CLUSTER_ADDRESS }}
